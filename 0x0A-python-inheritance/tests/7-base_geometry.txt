>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> geo = BaseGeometry()

>>> geo.integer_validator("height", 12)

>>> geo.integer_validator("width", 89)
>>> geo.area()
Traceback (most recent call last):
Exception: area() is not implemented


>>> try:
...     geo.integer_validator("string", "hello")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] string must be an integer

>>> try:
...     geo.integer_validator("number", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] number must be greater than 0

>>> try:
...     geo.integer_validator("negative", -43)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] negative must be greater than 0

>>> geo.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> geo.integer_validator(1)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geo.integer_validator(2, 3, 4)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> geo.integer_validator("list", [1])
Traceback (most recent call last):
TypeError: list must be an integer

>>> geo.integer_validator("age", 1)

>>> geo.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> geo.integer_validator("age", -4)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> geo.integer_validator("age", "4")
Traceback (most recent call last):
TypeError: age must be an integer

>>> geo.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> geo.integer_validator("age", [3])
Traceback (most recent call last):
TypeError: age must be an integer

>>> geo.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> geo.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

>>> geo.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer